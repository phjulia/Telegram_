{"version":3,"sources":["../../../.tmp-es/components/global-header/notifications.jsx"],"names":["React","PropTypes","assign","Button","Popover","GLOBAL_HEADER_NOTIFICATIONS","propTypes","assistiveText","shape","newNotificationsAfter","string","newNotificationsBefore","noNotifications","notificationCount","number","popover","node","GlobalHeaderNotifications","buttonAriaProps","props","popoverProps","align","body","triggerClassName","notificationsAssistiveText","children","icon","Component","displayName","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,SAASC,2BAAT,QAA4C,2BAA5C;AAEA,IAAMC,SAAS,GAAG;AACjB;AACD;AACA;AACA;AACA;AACA;AACCC,EAAAA,aAAa,EAAEN,SAAS,CAACO,KAAV,CAAgB;AAC9BC,IAAAA,qBAAqB,EAAER,SAAS,CAACS,MADH;AAE9BC,IAAAA,sBAAsB,EAAEV,SAAS,CAACS,MAFJ;AAG9BE,IAAAA,eAAe,EAAEX,SAAS,CAACS;AAHG,GAAhB,CAPE;;AAYjB;AACD;AACA;AACCG,EAAAA,iBAAiB,EAAEZ,SAAS,CAACa,MAfZ;;AAgBjB;AACD;AACA;AACCC,EAAAA,OAAO,EAAEd,SAAS,CAACe;AAnBF,CAAlB;AAsBA;AACA;AACA;;IACMC,yB;;;;;;;;;;;;;WACL,kBAAS;AACR,UAAMC,eAAe,GAAG;AACvB,qBAAa;AADU,OAAxB;AAGA,UAAQL,iBAAR,GAA8B,KAAKM,KAAnC,CAAQN,iBAAR;AACA,UAAMO,YAAY,GAAGlB,MAAM,CAC1B;AACCmB,QAAAA,KAAK,EAAE,cADR;AAECC,QAAAA,IAAI,eAAE,iCAFP;AAGCC,QAAAA,gBAAgB,EAAE;AAHnB,OAD0B,EAM1B,KAAKJ,KAAL,CAAWJ,OAAX,GAAqB,KAAKI,KAAL,CAAWJ,OAAX,CAAmBI,KAAxC,GAAgD,EANtB,CAA3B;AAQA,UAAIK,0BAA0B,GAAG,KAAKL,KAAL,CAAWZ,aAAX,CAAyBK,eAA1D,CAbQ,CAeR;;AACA,aAAOQ,YAAY,CAACK,QAApB;;AAEA,UAAIZ,iBAAiB,GAAG,CAAxB,EAA2B;AAC1BW,QAAAA,0BAA0B,aAAM,KAAKL,KAAL,CAAWZ,aAAX,CAAyBI,sBAA/B,SAAwDE,iBAAxD,SAA4E,KAAKM,KAAL,CAAWZ,aAAX,CAAyBE,qBAArG,CAA1B;AACA,OAFD,MAEO;AACNS,QAAAA,eAAe,CAAC,aAAD,CAAf,GAAiC,IAAjC;AACA;;AAED,0BACC,oBAAC,OAAD,EAAaE,YAAb,eACC,oBAAC,MAAD;AACC,QAAA,aAAa,EAAE;AAAEM,UAAAA,IAAI,EAAEF;AAAR,SADhB;AAEC,QAAA,SAAS,EAAC,sFAFX;AAGC,QAAA,YAAY,EAAC,SAHd;AAIC,QAAA,aAAa,EAAC,0BAJf;AAKC,QAAA,QAAQ,EAAC,cALV;AAMC,QAAA,QAAQ,EAAC,OANV;AAOC,QAAA,WAAW,EAAC,WAPb;AAQC,QAAA,KAAK,EAAEA,0BARR;AASC,QAAA,OAAO,EAAC;AATT,SAUKN,eAVL,EADD,EAaEL,iBAAiB,GAAG,CAApB,gBACA;AACC,uBAAY,MADb;AAEC,QAAA,SAAS,EAAC;AAFX,SAIEA,iBAJF,CADA,gBAQA;AAAM,uBAAY,MAAlB;AAAyB,QAAA,SAAS,EAAC;AAAnC,QArBF,CADD;AA0BA;;;;EAnDsCb,KAAK,CAAC2B,S;;AAsD9CV,yBAAyB,CAACW,WAA1B,GAAwCvB,2BAAxC;AAEAY,yBAAyB,CAACY,YAA1B,GAAyC;AACxCtB,EAAAA,aAAa,EAAE;AACdE,IAAAA,qBAAqB,EAAE,oBADT;AAEdE,IAAAA,sBAAsB,EAAE,EAFV;AAGdC,IAAAA,eAAe,EAAE;AAHH,GADyB;AAMxCC,EAAAA,iBAAiB,EAAE;AANqB,CAAzC;AASAI,yBAAyB,CAACX,SAA1B,GAAsCA,SAAtC;AAEA,eAAeW,yBAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Global Header Notifications Component\n// Implements the [Global Header Notifications design pattern](https://www.lightningdesignsystem.com/components/global-header/#Notifications) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport assign from 'lodash.assign';\nimport Button from '../button';\nimport Popover from '../popover';\n\nimport { GLOBAL_HEADER_NOTIFICATIONS } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * * `newNotificationsAfter`: Assistive text for when there are new notifications, after the notificationCount. The default is ' new notifications'.\n\t * * `newNotificationsBefore`: Assistive text for when there are new notifications, before the notificationCount. The default is ''.\n\t * * `noNotifications`: Assistive text for when there are no new notifications.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tnewNotificationsAfter: PropTypes.string,\n\t\tnewNotificationsBefore: PropTypes.string,\n\t\tnoNotifications: PropTypes.string,\n\t}),\n\t/**\n\t * Dictates the number of notifications shown in the new notifications badge.\n\t */\n\tnotificationCount: PropTypes.number,\n\t/**\n\t * A `Popover` component. The props from this popover will be merged and override any default props. The `children` prop will be ignored.\n\t */\n\tpopover: PropTypes.node,\n};\n\n/**\n * A GlobalHeaderNotifications component. Notifications are a way to notify a user about a global change within the application.\n */\nclass GlobalHeaderNotifications extends React.Component {\n\trender() {\n\t\tconst buttonAriaProps = {\n\t\t\t'aria-live': 'assertive',\n\t\t};\n\t\tconst { notificationCount } = this.props;\n\t\tconst popoverProps = assign(\n\t\t\t{\n\t\t\t\talign: 'bottom right',\n\t\t\t\tbody: <span />,\n\t\t\t\ttriggerClassName: 'slds-dropdown-trigger slds-dropdown-trigger_click',\n\t\t\t},\n\t\t\tthis.props.popover ? this.props.popover.props : {}\n\t\t);\n\t\tlet notificationsAssistiveText = this.props.assistiveText.noNotifications;\n\n\t\t// eslint-disable-next-line fp/no-delete\n\t\tdelete popoverProps.children;\n\n\t\tif (notificationCount > 0) {\n\t\t\tnotificationsAssistiveText = `${this.props.assistiveText.newNotificationsBefore}${notificationCount}${this.props.assistiveText.newNotificationsAfter}`;\n\t\t} else {\n\t\t\tbuttonAriaProps['aria-atomic'] = true;\n\t\t}\n\n\t\treturn (\n\t\t\t<Popover {...popoverProps}>\n\t\t\t\t<Button\n\t\t\t\t\tassistiveText={{ icon: notificationsAssistiveText }}\n\t\t\t\t\tclassName=\"slds-button_icon slds-global-actions__notifications slds-global-actions__item-action\"\n\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\ticonClassName=\"slds-global-header__icon\"\n\t\t\t\t\ticonName=\"notification\"\n\t\t\t\t\ticonSize=\"small\"\n\t\t\t\t\ticonVariant=\"container\"\n\t\t\t\t\ttitle={notificationsAssistiveText}\n\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t{...buttonAriaProps}\n\t\t\t\t/>\n\t\t\t\t{notificationCount > 0 ? (\n\t\t\t\t\t<span\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\tclassName=\"slds-notification-badge slds-incoming-notification slds-show-notification\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{notificationCount}\n\t\t\t\t\t</span>\n\t\t\t\t) : (\n\t\t\t\t\t<span aria-hidden=\"true\" className=\"slds-notification-badge\" />\n\t\t\t\t)}\n\t\t\t</Popover>\n\t\t);\n\t}\n}\n\nGlobalHeaderNotifications.displayName = GLOBAL_HEADER_NOTIFICATIONS;\n\nGlobalHeaderNotifications.defaultProps = {\n\tassistiveText: {\n\t\tnewNotificationsAfter: ' new notifications',\n\t\tnewNotificationsBefore: '',\n\t\tnoNotifications: 'No new notifications',\n\t},\n\tnotificationCount: 0,\n};\n\nGlobalHeaderNotifications.propTypes = propTypes;\n\nexport default GlobalHeaderNotifications;\n"],"file":"notifications.js"}