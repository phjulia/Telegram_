{"version":3,"sources":["../../../../.tmp-es/components/time-picker/__tests__/time-picker.browser-test.jsx"],"names":["React","TestUtils","SLDSTimepicker","IconSettings","formatter","date","toLocaleTimeString","hour","minute","dateTimeNow","Date","defaultStrValue","defaultProps","onDateChange","value","strValue","describe","it","futureDateTime","getTime","TestTimepicker","isOpen","Component","parent","renderIntoDocument","refs","timePicker","state","should","eql"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD;AAAA,SACjBA,IAAI,CAACC,kBAAL,CAAwB,OAAxB,EAAiC;AAAEC,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,MAAM,EAAE;AAA3B,GAAjC,CADiB;AAAA,CAAlB;;AAEA,IAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;AACA,IAAMC,eAAe,GAAGP,SAAS,CAACK,WAAD,CAAjC;AAEA,IAAMG,YAAY,GAAG;AACpBC,EAAAA,YAAY,EAAE,wBAAM,CAAE,CADF;AAEpBC,EAAAA,KAAK,EAAEL,WAFa;AAGpBM,EAAAA,QAAQ,EAAEJ;AAHU,CAArB;AAMAK,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AAClCA,EAAAA,QAAQ,CAAC,8BAAD,EAAiC,YAAM;AAC9CC,IAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAM;AACzD,UAAMC,cAAc,GAAG,IAAIR,IAAJ,CACtB,IAAIA,IAAJ,GAAWS,OAAX,KAAuB,KAAK,EAAL,GAAU,EAAV,GAAe,IADhB,CAAvB;;AAIA,UAAMC,cAAc;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,kEACX;AACPC,YAAAA,MAAM,EAAE,KADD;AAEPP,YAAAA,KAAK,EAAEI,cAFA;AAGPH,YAAAA,QAAQ,EAAEX,SAAS,CAACc,cAAD;AAHZ,WADW;;AAAA;AAAA;;AAAA;AAAA;AAAA,iBAOnB,kBAAS;AACR,gCACC,oBAAC,YAAD;AAAc,cAAA,QAAQ,EAAC;AAAvB,4BACC,oBAAC,cAAD;AAAgB,cAAA,GAAG,EAAC;AAApB,eAAqCN,YAArC,EADD,CADD;AAKA;AAbkB;;AAAA;AAAA,QAAiBZ,KAAK,CAACsB,SAAvB,CAApB;;AAeA,UAAMC,MAAM,GAAGtB,SAAS,CAACuB,kBAAV,eAA6B,oBAAC,cAAD,OAA7B,CAAf;AACAD,MAAAA,MAAM,CAACE,IAAP,CAAYC,UAAZ,CAAuBC,KAAvB,CAA6BZ,QAA7B,CAAsCa,MAAtC,CAA6CC,GAA7C,CAAiDlB,eAAjD;AACA,KAtBC,CAAF;AAuBA,GAxBO,CAAR;AAyBA,CA1BO,CAAR","sourcesContent":["/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport TestUtils from 'react-dom/test-utils';\n\nimport SLDSTimepicker from '../../time-picker';\nimport IconSettings from '../../icon-settings';\n\nconst formatter = (date) =>\n\tdate.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' });\nconst dateTimeNow = new Date();\nconst defaultStrValue = formatter(dateTimeNow);\n\nconst defaultProps = {\n\tonDateChange: () => {},\n\tvalue: dateTimeNow,\n\tstrValue: defaultStrValue,\n};\n\ndescribe('SLDSTimepicker: ', () => {\n\tdescribe('Timepicker Value Prop Change', () => {\n\t\tit('displays a modified state upon changing props', () => {\n\t\t\tconst futureDateTime = new Date(\n\t\t\t\tnew Date().getTime() + 24 * 60 * 60 * 1000\n\t\t\t);\n\n\t\t\tconst TestTimepicker = class extends React.Component {\n\t\t\t\tstate = {\n\t\t\t\t\tisOpen: false,\n\t\t\t\t\tvalue: futureDateTime,\n\t\t\t\t\tstrValue: formatter(futureDateTime),\n\t\t\t\t};\n\n\t\t\t\trender() {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t\t\t\t<SLDSTimepicker ref=\"timePicker\" {...defaultProps} />\n\t\t\t\t\t\t</IconSettings>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst parent = TestUtils.renderIntoDocument(<TestTimepicker />);\n\t\t\tparent.refs.timePicker.state.strValue.should.eql(defaultStrValue);\n\t\t});\n\t});\n});\n"],"file":"time-picker.browser-test.js"}