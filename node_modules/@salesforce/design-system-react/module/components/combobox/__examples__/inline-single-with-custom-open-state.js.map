{"version":3,"sources":["../../../../.tmp-es/components/combobox/__examples__/inline-single-with-custom-open-state.jsx"],"names":["React","Combobox","Icon","comboboxFilterAndLimit","IconSettings","accounts","id","label","subTitle","type","accountsWithIcon","map","elem","icon","Example","props","state","inputValue","selection","isOpen","onChange","event","value","action","console","log","setState","onRequestClose","prevState","onRequestOpen","onRequestRemoveSelectedOption","data","onSelect","Object","keys","key","placeholder","options","length","Component","displayName"],"mappings":"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","sourcesContent":["/* eslint-disable no-console, react/prop-types */\nimport React from 'react';\nimport Combobox from '~/components/combobox';\nimport Icon from '~/components/icon';\nimport comboboxFilterAndLimit from '~/components/combobox/filter';\nimport IconSettings from '~/components/icon-settings';\n\nconst accounts = [\n\t{\n\t\tid: '1',\n\t\tlabel: 'Acme',\n\t\tsubTitle: 'Account • San Francisco',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '2',\n\t\tlabel: 'Salesforce.com, Inc.',\n\t\tsubTitle: 'Account • San Francisco',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '3',\n\t\tlabel: \"Paddy's Pub\",\n\t\tsubTitle: 'Account • Boston, MA',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '4',\n\t\tlabel: 'Tyrell Corp',\n\t\tsubTitle: 'Account • San Francisco, CA',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '5',\n\t\tlabel: 'Paper St. Soap Company',\n\t\tsubTitle: 'Account • Beloit, WI',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '6',\n\t\tlabel: 'Nakatomi Investments',\n\t\tsubTitle: 'Account • Chicago, IL',\n\t\ttype: 'account',\n\t},\n\t{ id: '7', label: 'Acme Landscaping', type: 'account' },\n\t{\n\t\tid: '8',\n\t\tlabel: 'Acme Construction',\n\t\tsubTitle: 'Account • Grand Marais, MN',\n\t\ttype: 'account',\n\t},\n];\n\nconst accountsWithIcon = accounts.map((elem) => ({\n\t...elem,\n\t...{\n\t\ticon: (\n\t\t\t<Icon\n\t\t\t\tassistiveText={{ label: 'Account' }}\n\t\t\t\tcategory=\"standard\"\n\t\t\t\tname={elem.type}\n\t\t\t/>\n\t\t),\n\t},\n}));\n\nclass Example extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinputValue: '',\n\t\t\tselection: [],\n\t\t\tisOpen: false,\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<Combobox\n\t\t\t\t\tid=\"combobox-inline-single\"\n\t\t\t\t\tevents={{\n\t\t\t\t\t\tonChange: (event, { value }) => {\n\t\t\t\t\t\t\tif (this.props.action) {\n\t\t\t\t\t\t\t\tthis.props.action('onChange')(event, value);\n\t\t\t\t\t\t\t} else if (console) {\n\t\t\t\t\t\t\t\tconsole.log('onChange', event, value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setState({ inputValue: value });\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonRequestClose: () => {\n\t\t\t\t\t\t\tthis.setState((prevState) => ({\n\t\t\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t\t\tisOpen: false,\n\t\t\t\t\t\t\t\tinputValue: '',\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonRequestOpen: () => {\n\t\t\t\t\t\t\tthis.setState((prevState) => ({ ...prevState, isOpen: true }));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonRequestRemoveSelectedOption: (event, data) => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tinputValue: '',\n\t\t\t\t\t\t\t\tselection: data.selection,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSelect: (event, data) => {\n\t\t\t\t\t\t\tif (this.props.action) {\n\t\t\t\t\t\t\t\tthis.props.action('onSelect')(\n\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\t...Object.keys(data).map((key) => data[key])\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (console) {\n\t\t\t\t\t\t\t\tconsole.log('onSelect', event, data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tinputValue: '',\n\t\t\t\t\t\t\t\tselection: data.selection,\n\t\t\t\t\t\t\t\tisOpen: false,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tlabels={{\n\t\t\t\t\t\tlabel: 'Search',\n\t\t\t\t\t\tplaceholder: 'Search Salesforce',\n\t\t\t\t\t}}\n\t\t\t\t\toptions={comboboxFilterAndLimit({\n\t\t\t\t\t\tinputValue: this.state.inputValue,\n\t\t\t\t\t\toptions: accountsWithIcon,\n\t\t\t\t\t\tselection: this.state.selection,\n\t\t\t\t\t})}\n\t\t\t\t\tpredefinedOptionsOnly\n\t\t\t\t\tselection={this.state.selection}\n\t\t\t\t\tisOpen={this.state.isOpen}\n\t\t\t\t\tvalue={\n\t\t\t\t\t\tthis.state.selection.length > 0\n\t\t\t\t\t\t\t? this.state.selection[0].label\n\t\t\t\t\t\t\t: this.state.inputValue\n\t\t\t\t\t}\n\t\t\t\t\tvariant=\"inline-listbox\"\n\t\t\t\t/>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nExample.displayName = 'ComboboxExample';\nexport default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime\n"],"file":"inline-single-with-custom-open-state.js"}