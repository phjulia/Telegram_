{"version":3,"sources":["../../../../.tmp-es/components/accordion/__examples__/base.jsx"],"names":["React","Accordion","AccordionPanel","IconSettings","Dropdown","Example","props","state","expandedPanels","items","id","summary","details","selectedItem","icon","option","label","setState","filter","item","console","log","event","value","data","action","dataAsArray","Object","keys","map","i","menuDropdown","togglePanel","Component","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Accordion from '~/components/accordion'; // `~` is replaced with design-system-react at runtime\nimport AccordionPanel from '~/components/accordion/panel'; // `~` is replaced with design-system-react at runtime\nimport IconSettings from '~/components/icon-settings'; // `~` is replaced with design-system-react at runtime\nimport Dropdown from '~/components/menu-dropdown'; // `~` is replaced with design-system-react at runtime\n\nclass Example extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\texpandedPanels: {},\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tid: '1',\n\t\t\t\t\tsummary: 'Accordion Summary',\n\t\t\t\t\tdetails: 'Accordion details - A',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: '2',\n\t\t\t\t\tsummary: 'Accordion Summary',\n\t\t\t\t\tdetails: 'Accordion details - B',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: '3',\n\t\t\t\t\tsummary: 'Accordion Summary',\n\t\t\t\t\tdetails: 'Accordion details - C',\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\tmenuDropdown(selectedItem) {\n\t\treturn (\n\t\t\t<Dropdown\n\t\t\t\talign=\"right\"\n\t\t\t\tid={selectedItem.id}\n\t\t\t\tassistiveText={{ icon: 'More Options' }}\n\t\t\t\tbuttonVariant=\"icon\"\n\t\t\t\tbuttonClassName=\"slds-shrink-none\"\n\t\t\t\ticonCategory=\"utility\"\n\t\t\t\ticonName=\"down\"\n\t\t\t\ticonVariant=\"border-filled\"\n\t\t\t\tonSelect={(option) => {\n\t\t\t\t\tif (option.label === 'delete') {\n\t\t\t\t\t\tthis.setState((state) => ({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\titems: state.items.filter((item) => item.id !== selectedItem.id),\n\t\t\t\t\t\t}));\n\t\t\t\t\t} else if (console) {\n\t\t\t\t\t\tconsole.log('onSelect', event, option);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\toptions={[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'delete',\n\t\t\t\t\t\tvalue: 'A0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'redo',\n\t\t\t\t\t\tvalue: 'B0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'activate',\n\t\t\t\t\t\tvalue: 'C0',\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t\ticonSize=\"x-small\"\n\t\t\t/>\n\t\t);\n\t}\n\n\ttogglePanel(event, data) {\n\t\tthis.setState((state) => ({\n\t\t\t...state,\n\t\t\texpandedPanels: {\n\t\t\t\t[data.id]: !state.expandedPanels[data.id],\n\t\t\t},\n\t\t}));\n\t\tif (this.props.action) {\n\t\t\tconst dataAsArray = Object.keys(data).map((id) => data[id]);\n\t\t\tthis.props.action('onClick')(event, ...dataAsArray);\n\t\t} else if (console) {\n\t\t\tconsole.log('[onSelect] (event, data)', event, data);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<Accordion id=\"base-example-accordion\">\n\t\t\t\t\t{this.state.items.map((item, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<AccordionPanel\n\t\t\t\t\t\t\t\texpanded={!!this.state.expandedPanels[item.id]}\n\t\t\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\t\t\tpanelContentActions={this.menuDropdown(item)}\n\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\tonTogglePanel={(event) => this.togglePanel(event, item)}\n\t\t\t\t\t\t\t\tsummary={item.summary}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{item.details}\n\t\t\t\t\t\t\t</AccordionPanel>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Accordion>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nExample.displayName = 'AccordionExample';\nexport default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime\n"],"file":"base.js"}