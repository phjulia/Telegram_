function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import IconSettings from "../../../../components/icon-settings";
import Dropdown from "../../../../components/menu-dropdown"; // `~` is replaced with design-system-react at runtime

var options = [{
  label: 'Table View',
  value: 'table',
  rightIcon: {
    category: 'utility',
    name: 'table'
  }
}, {
  label: 'Kanban Board',
  value: 'kanban',
  rightIcon: {
    category: 'utility',
    name: 'kanban'
  }
}, {
  label: 'List View',
  value: 'list',
  rightIcon: {
    category: 'utility',
    name: 'side_list'
  }
}];

var Example = /*#__PURE__*/function (_React$Component) {
  _inherits(Example, _React$Component);

  var _super = _createSuper(Example);

  function Example(props) {
    var _this;

    _classCallCheck(this, Example);

    _this = _super.call(this, props);
    _this.state = {
      selectedOptionIndex: 0
    };
    return _this;
  }

  _createClass(Example, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/React.createElement(IconSettings, {
        iconPath: "/assets/icons"
      }, /*#__PURE__*/React.createElement("div", {
        className: "slds-grid slds-grid_pull-padded slds-grid_vertical-align-center"
      }, /*#__PURE__*/React.createElement("div", {
        className: "slds-col_padded"
      }, /*#__PURE__*/React.createElement("span", null, "Checkmark "), /*#__PURE__*/React.createElement(Dropdown, _extends({
        assistiveText: {
          icon: 'Checkmark'
        },
        checkmark: true,
        iconCategory: "utility",
        iconName: "down",
        id: "checkmark-menu-dropdown",
        iconVariant: "border-filled",
        onSelect: function onSelect(value) {
          console.log('selected: ', value);
        },
        options: [{
          label: 'Menu Item One',
          value: 'A0'
        }, {
          label: 'Menu Item Two',
          value: 'B0'
        }, {
          label: 'Menu Item Three',
          value: 'C0'
        }],
        value: "A0"
      }, this.props))), /*#__PURE__*/React.createElement("div", {
        className: "slds-col_padded"
      }, /*#__PURE__*/React.createElement("span", null, "Checkmark with right icon "), /*#__PURE__*/React.createElement(Dropdown, _extends({
        assistiveText: {
          icon: 'Checkmark with right icon'
        },
        buttonVariant: "icon",
        checkmark: true,
        iconCategory: options[this.state.selectedOptionIndex].rightIcon.category,
        iconName: options[this.state.selectedOptionIndex].rightIcon.name,
        iconSize: "large",
        iconVariant: "more",
        id: "checkmark-menu-dropdown-right-icon",
        onSelect: function onSelect(option) {
          var selectedOptionIndex = options.findIndex(function (currenOption) {
            return currenOption.value === option.value;
          });

          _this2.setState({
            selectedOptionIndex: selectedOptionIndex
          });
        },
        options: options,
        value: options[this.state.selectedOptionIndex].value
      }, this.props)))));
    }
  }]);

  return Example;
}(React.Component);

_defineProperty(Example, "displayName", 'MediaObjectExample');

export default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime
//# sourceMappingURL=checkmark.js.map