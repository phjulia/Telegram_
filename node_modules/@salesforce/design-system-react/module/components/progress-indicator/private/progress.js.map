{"version":3,"sources":["../../../../.tmp-es/components/progress-indicator/private/progress.jsx"],"names":["React","PropTypes","classNames","ProgressBar","PROGRESS_INDICATOR_PROGRESS","propTypes","assistiveText","shape","percentage","string","children","node","className","oneOfType","array","object","id","isRequired","orientation","oneOf","value","variant","Progress","props","getId","Component","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,SAASC,2BAAT,QAA4C,8BAA5C,C,CAEA;;AACA,IAAMC,SAAS,GAAG;AACjB;AACD;AACA;AACCC,EAAAA,aAAa,EAAEL,SAAS,CAACM,KAAV,CAAgB;AAC9BC,IAAAA,UAAU,EAAEP,SAAS,CAACQ;AADQ,GAAhB,CAJE;;AAOjB;AACD;AACA;AACCC,EAAAA,QAAQ,EAAET,SAAS,CAACU,IAVH;;AAWjB;AACD;AACA;AACCC,EAAAA,SAAS,EAAEX,SAAS,CAACY,SAAV,CAAoB,CAC9BZ,SAAS,CAACa,KADoB,EAE9Bb,SAAS,CAACc,MAFoB,EAG9Bd,SAAS,CAACQ,MAHoB,CAApB,CAdM;;AAmBjB;AACD;AACA;AACCO,EAAAA,EAAE,EAAEf,SAAS,CAACQ,MAAV,CAAiBQ,UAtBJ;;AAuBjB;AACD;AACA;AACCC,EAAAA,WAAW,EAAEjB,SAAS,CAACkB,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB,CA1BI;;AA2BjB;AACD;AACA;AACCC,EAAAA,KAAK,EAAEnB,SAAS,CAACQ,MAAV,CAAiBQ,UA9BP;;AA+BjB;AACD;AACA;AACCI,EAAAA,OAAO,EAAEpB,SAAS,CAACkB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,iBAAlB,CAAhB;AAlCQ,CAAlB;AAqCA;AACA;AACA;;IACMG,Q;;;;;;;;;;;;;;AACL;AACD;AACA;AACC,qBAAQ;AACP,aAAO,KAAKC,KAAL,CAAWP,EAAlB;AACA;;;WAED,kBAAS;AACR,0BACC;AACC,QAAA,EAAE,EAAE,KAAKQ,KAAL,EADL;AAEC,QAAA,SAAS,EAAEtB,UAAU,CACpB,eADoB,EAEpB;AAAE,iCAAuB,KAAKqB,KAAL,CAAWF,OAAX,KAAuB;AAAhD,SAFoB,EAGpB;AAAE,oCAA0B,KAAKE,KAAL,CAAWL,WAAX,KAA2B;AAAvD,SAHoB,EAIpB;AAAE,mCAAyB,KAAKK,KAAL,CAAWF,OAAX,KAAuB;AAAlD,SAJoB,EAKpB,KAAKE,KAAL,CAAWX,SALS;AAFtB,sBAUC;AACC,QAAA,SAAS,EAAEV,UAAU,CAAC,qBAAD,EAAwB;AAC5C,0CACC,KAAKqB,KAAL,CAAWF,OAAX,KAAuB;AAFoB,SAAxB;AADtB,SAME,KAAKE,KAAL,CAAWb,QANb,CAVD,EAkBE,KAAKa,KAAL,CAAWL,WAAX,KAA2B,UAA3B,iBACA,oBAAC,WAAD;AACC,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWH,KADnB;AAEC,QAAA,WAAW,EAAE,KAAKG,KAAL,CAAWL,WAFzB;AAGC,QAAA,aAAa,EAAE,KAAKK,KAAL,CAAWjB;AAH3B,QAnBF,CADD;AA4BA;;;;EArCqBN,KAAK,CAACyB,S;;AAwC7BH,QAAQ,CAACjB,SAAT,GAAqBA,SAArB;AACAiB,QAAQ,CAACI,WAAT,GAAuBtB,2BAAvB;AAEA,eAAekB,QAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, 'a simple javascript utility for conditionally\n// joining classNames together.'\nimport classNames from 'classnames';\n\nimport ProgressBar from './progress-bar';\n\nimport { PROGRESS_INDICATOR_PROGRESS } from '../../../utilities/constants';\n\n// ### Prop Types\nconst propTypes = {\n\t/**\n\t * Assistive text for percentage\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tpercentage: PropTypes.string,\n\t}),\n\t/**\n\t * Steps in the component\n\t */\n\tchildren: PropTypes.node,\n\t/**\n\t * CSS class names to be added to the container element.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string.isRequired,\n\t/**\n\t * Determines the orientation of the progress indicator\n\t */\n\torientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\t/**\n\t * Percentage of progress completion, ranging [0, 100]\n\t */\n\tvalue: PropTypes.string.isRequired,\n\t/**\n\t * Determines component style\n\t */\n\tvariant: PropTypes.oneOf(['base', 'modal', 'setup-assistant']),\n};\n\n/**\n * Progress renders all step buttons and a container wrapping these buttongs and a progress bar\n */\nclass Progress extends React.Component {\n\t/**\n\t * Get the progress's HTML id. Generate a new one if no ID present.\n\t */\n\tgetId() {\n\t\treturn this.props.id;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={this.getId()}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-progress',\n\t\t\t\t\t{ 'slds-progress_shade': this.props.variant === 'modal' },\n\t\t\t\t\t{ 'slds-progress_vertical': this.props.orientation === 'vertical' },\n\t\t\t\t\t{ 'slds-progress_success': this.props.variant === 'setup-assistant' },\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<ol\n\t\t\t\t\tclassName={classNames('slds-progress__list', {\n\t\t\t\t\t\t'slds-progress__list-bordered':\n\t\t\t\t\t\t\tthis.props.variant === 'setup-assistant',\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</ol>\n\t\t\t\t{this.props.orientation !== 'vertical' && (\n\t\t\t\t\t<ProgressBar\n\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\torientation={this.props.orientation}\n\t\t\t\t\t\tassistiveText={this.props.assistiveText}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nProgress.propTypes = propTypes;\nProgress.displayName = PROGRESS_INDICATOR_PROGRESS;\n\nexport default Progress;\n"],"file":"progress.js"}