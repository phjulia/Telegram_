{"version":3,"sources":["../../../../.tmp-es/components/date-picker/__examples__/custom-input.jsx"],"names":["React","moment","Datepicker","Input","Example","isOpen","label","state","setState","event","data","props","action","dataAsArray","Object","keys","map","key","console","log","date","format","dateString","toDate","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;IAEMC,O;;;;;;;;;;;;;;;;4DAGG;AACPC,MAAAA,MAAM,EAAE;AADD,K;;;;;;;WAIR,kBAAS;AAAA;;AACR,0BACC,oBAAC,UAAD;AACC,QAAA,MAAM,EAAE;AACPC,UAAAA,KAAK,EAAE;AADA,SADT;AAIC,QAAA,KAAK,eAAE,oBAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB,UAJR;AAKC,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWF,MALpB;AAMC,QAAA,cAAc,EAAE,0BAAM;AACrB,UAAA,MAAI,CAACG,QAAL,CAAc;AAAEH,YAAAA,MAAM,EAAE;AAAV,WAAd;AACA,SARF;AASC,QAAA,aAAa,EAAE,yBAAM;AACpB,UAAA,MAAI,CAACG,QAAL,CAAc;AAAEH,YAAAA,MAAM,EAAE;AAAV,WAAd;AACA,SAXF;AAYC,QAAA,QAAQ,EAAE,kBAACI,KAAD,EAAQC,IAAR,EAAiB;AAC1B,cAAI,MAAI,CAACC,KAAL,CAAWC,MAAf,EAAuB;AACtB,gBAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,GAAlB,CAAsB,UAACC,GAAD;AAAA,qBAASP,IAAI,CAACO,GAAD,CAAb;AAAA,aAAtB,CAApB;;AACA,YAAA,MAAI,CAACN,KAAL,CAAWC,MAAX,CAAkB,UAAlB,iBAA8BH,KAA9B,EAAqCC,IAArC,4BAA8CG,WAA9C;AACA,WAHD,MAGO,IAAIK,OAAJ,EAAa;AACnBA,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBV,KAAxB,EAA+BC,IAA/B;AACA;AACD,SAnBF;AAoBC,QAAA,SAAS,EAAE,mBAACU,IAAD,EAAU;AACpB,iBAAOA,IAAI,GAAGnB,MAAM,CAACmB,IAAD,CAAN,CAAaC,MAAb,CAAoB,UAApB,CAAH,GAAqC,EAAhD;AACA,SAtBF;AAuBC,QAAA,MAAM,EAAE,gBAACC,UAAD,EAAgB;AACvB,iBAAOrB,MAAM,CAACqB,UAAD,EAAa,YAAb,CAAN,CAAiCC,MAAjC,EAAP;AACA;AAzBF,QADD;AA6BA;;;;EArCoBvB,KAAK,CAACwB,S;;gBAAtBpB,O,iBACgB,mB;;AAuCtB,eAAeA,OAAf,C,CAAwB","sourcesContent":["/* eslint-disable no-console, react/prop-types */\nimport React from 'react';\nimport moment from 'moment';\n\nimport Datepicker from '~/components/date-picker';\nimport Input from '~/components/input';\n\nclass Example extends React.Component {\n\tstatic displayName = 'DatepickerExample';\n\n\tstate = {\n\t\tisOpen: false,\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Datepicker\n\t\t\t\tlabels={{\n\t\t\t\t\tlabel: 'Date',\n\t\t\t\t}}\n\t\t\t\tinput={<Input placeholder=\"With custom Input\" />}\n\t\t\t\tisOpen={this.state.isOpen}\n\t\t\t\tonRequestClose={() => {\n\t\t\t\t\tthis.setState({ isOpen: false });\n\t\t\t\t}}\n\t\t\t\tonRequestOpen={() => {\n\t\t\t\t\tthis.setState({ isOpen: true });\n\t\t\t\t}}\n\t\t\t\tonChange={(event, data) => {\n\t\t\t\t\tif (this.props.action) {\n\t\t\t\t\t\tconst dataAsArray = Object.keys(data).map((key) => data[key]);\n\t\t\t\t\t\tthis.props.action('onChange')(event, data, ...dataAsArray);\n\t\t\t\t\t} else if (console) {\n\t\t\t\t\t\tconsole.log('onChange', event, data);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tformatter={(date) => {\n\t\t\t\t\treturn date ? moment(date).format('M/D/YYYY') : '';\n\t\t\t\t}}\n\t\t\t\tparser={(dateString) => {\n\t\t\t\t\treturn moment(dateString, 'MM-DD-YYYY').toDate();\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime\n"],"file":"custom-input.js"}