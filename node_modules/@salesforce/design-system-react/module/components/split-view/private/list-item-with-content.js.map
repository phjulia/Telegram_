{"version":3,"sources":["../../../../.tmp-es/components/split-view/private/list-item-with-content.jsx"],"names":["React","PropTypes","classNames","DISPLAY_NAME","propsTypes","assistiveText","shape","unreadItem","string","item","object","isRequired","multiple","bool","isFocused","isSelected","isUnread","events","onClick","func","listItemRef","defaultProps","listItemWithContent","ListItemContent","ListItemWithContent","event","preventDefault","props","unread","Component","displayName","name"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable class-methods-use-this */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const DISPLAY_NAME = 'SLDSSplitViewListItemWithContent';\n\nconst propsTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * * `unreadItem`: The unread indicator.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tunreadItem: PropTypes.string,\n\t}),\n\t/**\n\t * Item to be displayed\n\t */\n\titem: PropTypes.object.isRequired,\n\t/**\n\t * Allows multiple item to be selection\n\t */\n\tmultiple: PropTypes.bool,\n\t/**\n\t * Shows the item as `focused`.\n\t */\n\tisFocused: PropTypes.bool.isRequired,\n\t/**\n\t * Shows the item as `selected`.\n\t */\n\tisSelected: PropTypes.bool.isRequired,\n\t/**\n\t * Shows the item as `unread`.\n\t */\n\tisUnread: PropTypes.bool,\n\t/**\n\t * **Event Callbacks**\n\t * * `onClick`: Called when the item is clicked.\n\t * * * Event\n\t * * * Meta data\n\t * * * * `item`: The original item.\n\t * * * * `isSelected`: Is the item selected.\n\t * * * * `isUnread`: Is the item unread.\n\t */\n\tevents: PropTypes.shape({\n\t\tonClick: PropTypes.func.isRequired,\n\t}),\n\t/**\n\t * Reference to the list item component\n\t */\n\tlistItemRef: PropTypes.func,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tunreadItem: 'Unread Item',\n\t},\n\tevents: {},\n};\n\n/**\n * HOC that wraps the list item content with selection and unread functionality.\n * @param ListItemContent {node} A React component\n * @returns {ListItemWithContent} A React component\n */\nconst listItemWithContent = (ListItemContent) => {\n\tclass ListItemWithContent extends React.Component {\n\t\tstatic displayName = `${DISPLAY_NAME}(${\n\t\t\tListItemContent.displayName || ListItemContent.name || 'Component'\n\t\t})`;\n\n\t\tstatic propTypes = propsTypes;\n\n\t\tstatic defaultProps = defaultProps;\n\n\t\tonClick = (event) => {\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.props.events.onClick(event, {\n\t\t\t\titem: this.props.item,\n\t\t\t\tisSelected: this.props.isSelected,\n\t\t\t\tisUnread: this.props.isUnread,\n\t\t\t});\n\t\t};\n\n\t\tunread() {\n\t\t\treturn this.props.isUnread ? (\n\t\t\t\t<abbr\n\t\t\t\t\tclassName=\"slds-indicator_unread\"\n\t\t\t\t\ttitle={this.props.assistiveText.unreadItem}\n\t\t\t\t\taria-label={this.props.assistiveText.unreadItem}\n\t\t\t\t>\n\t\t\t\t\t{/* eslint-disable-next-line react/jsx-curly-brace-presence */}\n\t\t\t\t\t<span className=\"slds-assistive-text\">{'‚óè'}</span>\n\t\t\t\t</abbr>\n\t\t\t) : null;\n\t\t}\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName={classNames('slds-split-view__list-item', {\n\t\t\t\t\t\t'slds-is-unread': this.props.isUnread,\n\t\t\t\t\t})}\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"slds-split-view__list-item-action slds-grow slds-has-flexi-truncate\"\n\t\t\t\t\t\trole=\"option\"\n\t\t\t\t\t\tref={this.props.listItemRef}\n\t\t\t\t\t\taria-selected={\n\t\t\t\t\t\t\tthis.props.multiple\n\t\t\t\t\t\t\t\t? !!this.props.isSelected\n\t\t\t\t\t\t\t\t: this.props.isSelected\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttabIndex={this.props.isFocused ? 0 : -1}\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\tonClick={this.onClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.unread()}\n\t\t\t\t\t\t<ListItemContent {...this.props} />\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn ListItemWithContent;\n};\n\nexport default listItemWithContent;\n"],"file":"list-item-with-content.js"}