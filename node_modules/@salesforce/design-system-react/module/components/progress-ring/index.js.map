{"version":3,"sources":["../../../.tmp-es/components/progress-ring/index.jsx"],"names":["React","PropTypes","classNames","PROGRESS_RING","Icon","ProgressRingShape","THEME_OPTIONS","Object","freeze","ACTIVE","WARNING","EXPIRED","COMPLETE","THEME_CLASSES","propTypes","id","string","className","oneOfType","array","object","theme","oneOf","icon","node","hasIcon","bool","value","number","isRequired","flowDirection","size","defaultProps","ProgressRing","props","themeClass","percentDecimal","Component","displayName"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Progress Ring design pattern](https://lightningdesignsystem.com/components/progress-ring/) in React.\n// Based on SLDS v2.4.5\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { PROGRESS_RING } from '../../utilities/constants';\nimport Icon from '../icon';\nimport ProgressRingShape from './private/ring-shape';\n\n/**\n * The themes available for the progress ring\n */\nexport const THEME_OPTIONS = Object.freeze({\n\tACTIVE: 'active',\n\tWARNING: 'warning',\n\tEXPIRED: 'expired',\n\tCOMPLETE: 'complete',\n});\n\n/**\n * The CSS classes associated with each theme\n */\nconst THEME_CLASSES = {\n\t[THEME_OPTIONS.ACTIVE]: 'slds-progress-ring_active-step',\n\t[THEME_OPTIONS.WARNING]: 'slds-progress-ring_warning',\n\t[THEME_OPTIONS.EXPIRED]: 'slds-progress-ring_expired',\n\t[THEME_OPTIONS.COMPLETE]: 'slds-progress-ring_complete',\n};\n\nconst propTypes = {\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * CSS classes to be added to tag with `.slds-progress-ring`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * The theme applied to the ring.\n\t */\n\ttheme: PropTypes.oneOf(['active', 'warning', 'expired', 'complete']),\n\t/**\n\t * Overrides the icon to be displayed.\n\t */\n\ticon: PropTypes.node,\n\t/**\n\t * Display the icon associated with the theme.\n\t */\n\thasIcon: PropTypes.bool,\n\t/**\n\t * Percentage of progress completion, ranging [0, 100].\n\t */\n\tvalue: PropTypes.number.isRequired,\n\t/**\n\t * Direction that the progress ring \"flows.\" Default is counter-clockwise, or `drain`. For clockwise flow, use `fill`\n\t */\n\tflowDirection: PropTypes.oneOf(['drain', 'fill']),\n\t/**\n\t * Size of the progress ring. Default is 'medium'\n\t */\n\tsize: PropTypes.oneOf(['medium', 'large']),\n};\n\nconst defaultProps = {\n\tflowDirection: 'drain',\n\tsize: 'medium',\n};\n\n/**\n * Customizable and configurable progress ring. Will display progress in a circular progress bar factor, and is capable of displaying iconography inside of the ring structure.\n */\nclass ProgressRing extends React.Component {\n\t/**\n\t * Gets the icon to display\n\t * @returns {node} Icon\n\t */\n\ticon() {\n\t\tlet icon = '';\n\n\t\tif (this.props.hasIcon) {\n\t\t\tif (this.props.icon) {\n\t\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\t\ticon = this.props.icon;\n\t\t\t} else if (this.props.theme === THEME_OPTIONS.WARNING) {\n\t\t\t\ticon = <Icon category=\"utility\" name=\"warning\" title=\"Warning\" />;\n\t\t\t} else if (this.props.theme === THEME_OPTIONS.EXPIRED) {\n\t\t\t\ticon = <Icon category=\"utility\" name=\"error\" title=\"Expired\" />;\n\t\t\t} else if (this.props.theme === THEME_OPTIONS.COMPLETE) {\n\t\t\t\ticon = <Icon category=\"utility\" name=\"check\" title=\"Complete\" />;\n\t\t\t}\n\t\t}\n\n\t\treturn icon;\n\t}\n\n\t/**\n\t * Percentage as a decimal\n\t * @returns {decimal} Percentage\n\t */\n\tpercentDecimal() {\n\t\treturn this.props.value / 100;\n\t}\n\n\t/**\n\t * Gets the theme CSS class\n\t * @returns {string} Class name\n\t */\n\tthemeClass() {\n\t\treturn THEME_CLASSES[this.props.theme] || '';\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ProgressRingShape\n\t\t\t\tid={this.props.id}\n\t\t\t\tsize={this.props.size}\n\t\t\t\tclassName={classNames(this.props.className, this.themeClass(), {\n\t\t\t\t\t'slds-progress-ring_large': this.props.size === 'large',\n\t\t\t\t})}\n\t\t\t\tfillPercentDecimal={this.percentDecimal()}\n\t\t\t\tflowDirection={this.props.flowDirection}\n\t\t\t>\n\t\t\t\t{this.icon()}\n\t\t\t</ProgressRingShape>\n\t\t);\n\t}\n}\n\nProgressRing.displayName = PROGRESS_RING;\nProgressRing.propTypes = propTypes;\nProgressRing.defaultProps = defaultProps;\n\nexport default ProgressRing;\n"],"file":"index.js"}