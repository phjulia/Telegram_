{"version":3,"sources":["../../../.tmp-es/components/data-table/cell.jsx"],"names":["React","useContext","PropTypes","classNames","CellContext","TableContext","useContextHelper","DATA_TABLE_CELL","DataTableCell","props","tableContext","cellContext","fixedLayout","tabIndex","hasFocus","handleFocus","handleKeyDown","childText","isValidElement","children","contents","title","className","ref","node","focus","cell","label","width","headerId","primaryColumn","displayName","propTypes","oneOfType","string","array","object","bool","item","property"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// ### React\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\nimport CellContext from './private/cell-context';\nimport TableContext from './private/table-context';\nimport useContextHelper from './private/context-helper';\n\n// ## Constants\nimport { DATA_TABLE_CELL } from '../../utilities/constants';\n\n/**\n * The default Cell renderer for the DataTable. Pass in any React component with the same `displayName` which takes the same props to provide custom rendering.\n */\nconst DataTableCell = (props) => {\n\tconst tableContext = useContext(TableContext);\n\tconst cellContext = useContext(CellContext);\n\tconst { tabIndex, hasFocus, handleFocus, handleKeyDown } = useContextHelper(\n\t\ttableContext,\n\t\tcellContext,\n\t\tprops.fixedLayout\n\t);\n\tconst childText = React.isValidElement(props.children)\n\t\t? props.children.props.children\n\t\t: props.children;\n\tconst contents = (\n\t\t<div\n\t\t\tclassName={classNames({\n\t\t\t\t'slds-truncate': props.fixedLayout,\n\t\t\t})}\n\t\t\ttitle={props.title || childText}\n\t\t>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n\n\tconst className = classNames(props.className, {\n\t\t'slds-has-focus': hasFocus,\n\t});\n\tconst ref = (node) => {\n\t\tif (node && hasFocus) {\n\t\t\tnode.focus();\n\t\t}\n\t};\n\tlet cell = (\n\t\t// eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n\t\t<td\n\t\t\tclassName={className}\n\t\t\tdata-label={props.label}\n\t\t\tonFocus={handleFocus}\n\t\t\tonKeyDown={handleKeyDown}\n\t\t\tref={ref}\n\t\t\trole={props.fixedLayout ? 'gridcell' : null}\n\t\t\tstyle={props.width ? { width: props.width } : null}\n\t\t\ttabIndex={tabIndex}\n\t\t\theaders={props.headerId}\n\t\t>\n\t\t\t{contents}\n\t\t</td>\n\t);\n\n\tif (props.primaryColumn) {\n\t\tcell = (\n\t\t\t<th\n\t\t\t\tclassName={className}\n\t\t\t\tref={ref}\n\t\t\t\tdata-label={props.label}\n\t\t\t\trole={props.fixedLayout ? 'gridcell' : null}\n\t\t\t\ttabIndex={tabIndex}\n\t\t\t\tstyle={props.width ? { width: props.width } : null}\n\t\t\t\tonFocus={handleFocus}\n\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t>\n\t\t\t\t{contents}\n\t\t\t</th>\n\t\t);\n\t}\n\n\treturn cell;\n};\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nDataTableCell.displayName = DATA_TABLE_CELL;\n\n// ### Prop Types\nDataTableCell.propTypes = {\n\t/**\n\t * The contents of the cell. This can be simple text or DOM nodes. Equivalent to `props.item[props.property]`\n\t */\n\tchildren: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\t/**\n\t * Class names to be added to the cell.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Use this if you are creating an advanced table (selectable, sortable, or resizable rows)\n\t */\n\tfixedLayout: PropTypes.bool,\n\t/**\n\t * The item from the items which represents this row.\n\t */\n\titem: PropTypes.object,\n\t/**\n\t * The primary column for a row. This is almost always the first column.\n\t */\n\tprimaryColumn: PropTypes.bool,\n\t/**\n\t * The property of this item to display.\n\t */\n\tproperty: PropTypes.string,\n\t/**\n\t * Shows on hover. Useful for truncated cells.\n\t */\n\ttitle: PropTypes.string,\n\t/**\n\t * Width of column. This is required for advanced/fixed layout tables. Please provide units. (`rems` are recommended)\n\t */\n\twidth: PropTypes.string,\n};\n\nexport default DataTableCell;\n"],"file":"cell.js"}