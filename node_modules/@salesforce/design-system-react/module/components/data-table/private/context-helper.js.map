{"version":3,"sources":["../../../../.tmp-es/components/data-table/private/context-helper.js"],"names":["useCallback","useTableContextHelper","tableContext","cellContext","fixedLayout","isActive","activeCell","rowIndex","columnIndex","hasFocus","tableHasFocus","changeActiveCell","handleTableKeyDown","handleKeyDown","handleFocus","allowKeyboardNavigation","event","tabIndex","activeElement","undefined"],"mappings":"AAAA;;AACA;AAEA,SAASA,WAAT,QAA4B,OAA5B;AAEA;AACA;AACA;;AACA,eAAe,SAASC,qBAAT,CACdC,YADc,EAEdC,WAFc,EAGdC,WAHc,EAIb;AACD,MAAMC,QAAQ,GACbH,YAAY,CAACI,UAAb,CAAwBC,QAAxB,KAAqCJ,WAAW,CAACI,QAAjD,IACAL,YAAY,CAACI,UAAb,CAAwBE,WAAxB,KAAwCL,WAAW,CAACK,WAFrD;AAIA,MAAMC,QAAQ,GAAGL,WAAW,IAAIF,YAAY,CAACQ,aAA5B,IAA6CL,QAA9D;AACA,MAAQM,gBAAR,GAAgET,YAAhE,CAAQS,gBAAR;AAAA,MAAyCC,kBAAzC,GAAgEV,YAAhE,CAA0BW,aAA1B;AACA,MAAMC,WAAW,GAAGd,WAAW,CAAC,YAAM;AACrC,QAAII,WAAW,IAAIF,YAAY,CAACa,uBAAhC,EAAyD;AACxDJ,MAAAA,gBAAgB,CAACR,WAAW,CAACI,QAAb,EAAuBJ,WAAW,CAACK,WAAnC,CAAhB;AACA;AACD,GAJ8B,EAI5B,CACFJ,WADE,EAEFF,YAAY,CAACa,uBAFX,EAGFJ,gBAHE,EAIFR,WAAW,CAACI,QAJV,EAKFJ,WAAW,CAACK,WALV,CAJ4B,CAA/B;AAYA,MAAMK,aAAa,GAAGb,WAAW,CAChC,UAACgB,KAAD,EAAW;AACV,QAAIZ,WAAW,IAAIF,YAAY,CAACa,uBAAhC,EAAyD;AACxDH,MAAAA,kBAAkB,CAACI,KAAD,CAAlB;AACA;AACD,GAL+B,EAMhC,CAACZ,WAAD,EAAcF,YAAY,CAACa,uBAA3B,EAAoDH,kBAApD,CANgC,CAAjC;AASA,MAAMK,QAAQ,GACbb,WAAW,IACXC,QADA,IAEA,CAACH,YAAY,CAACgB,aAFd,IAGAhB,YAAY,CAACa,uBAHb,GAIG,GAJH,GAKGI,SANJ;AAQA,SAAO;AAAEF,IAAAA,QAAQ,EAARA,QAAF;AAAYR,IAAAA,QAAQ,EAARA,QAAZ;AAAsBK,IAAAA,WAAW,EAAXA,WAAtB;AAAmCD,IAAAA,aAAa,EAAbA;AAAnC,GAAP;AACA","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport { useCallback } from 'react';\n\n/**\n * Calculates data table keyboard navigation state based on currently selected cell\n */\nexport default function useTableContextHelper(\n\ttableContext,\n\tcellContext,\n\tfixedLayout\n) {\n\tconst isActive =\n\t\ttableContext.activeCell.rowIndex === cellContext.rowIndex &&\n\t\ttableContext.activeCell.columnIndex === cellContext.columnIndex;\n\n\tconst hasFocus = fixedLayout && tableContext.tableHasFocus && isActive;\n\tconst { changeActiveCell, handleKeyDown: handleTableKeyDown } = tableContext;\n\tconst handleFocus = useCallback(() => {\n\t\tif (fixedLayout && tableContext.allowKeyboardNavigation) {\n\t\t\tchangeActiveCell(cellContext.rowIndex, cellContext.columnIndex);\n\t\t}\n\t}, [\n\t\tfixedLayout,\n\t\ttableContext.allowKeyboardNavigation,\n\t\tchangeActiveCell,\n\t\tcellContext.rowIndex,\n\t\tcellContext.columnIndex,\n\t]);\n\n\tconst handleKeyDown = useCallback(\n\t\t(event) => {\n\t\t\tif (fixedLayout && tableContext.allowKeyboardNavigation) {\n\t\t\t\thandleTableKeyDown(event);\n\t\t\t}\n\t\t},\n\t\t[fixedLayout, tableContext.allowKeyboardNavigation, handleTableKeyDown]\n\t);\n\n\tconst tabIndex =\n\t\tfixedLayout &&\n\t\tisActive &&\n\t\t!tableContext.activeElement &&\n\t\ttableContext.allowKeyboardNavigation\n\t\t\t? '0'\n\t\t\t: undefined;\n\n\treturn { tabIndex, hasFocus, handleFocus, handleKeyDown };\n}\n"],"file":"context-helper.js"}