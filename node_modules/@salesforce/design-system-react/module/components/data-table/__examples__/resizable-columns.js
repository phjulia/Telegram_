function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import DataTable from "../../../../components/data-table"; // `~` is replaced with design-system-react at runtime

import DataTableColumn from "../../../../components/data-table/column";
import DataTableCell from "../../../../components/data-table/cell";
import DataTableInteractiveLink from "../../../../components/data-table/interactive-link";
import IconSettings from "../../../../components/icon-settings";

var CustomDataTableCell = function CustomDataTableCell(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, ["children"]);

  return /*#__PURE__*/React.createElement(DataTableCell, props, /*#__PURE__*/React.createElement(DataTableInteractiveLink, {
    onClick: function onClick(event) {
      event.preventDefault();
    }
  }, children));
};

CustomDataTableCell.displayName = DataTableCell.displayName;
var columns = [/*#__PURE__*/React.createElement(DataTableColumn, {
  key: "opportunity",
  label: "Opportunity Name",
  property: "opportunityName"
}, /*#__PURE__*/React.createElement(CustomDataTableCell, null)), /*#__PURE__*/React.createElement(DataTableColumn, {
  key: "account-name",
  label: "Account Name",
  property: "accountName"
}), /*#__PURE__*/React.createElement(DataTableColumn, {
  key: "close-date",
  label: "Close Date",
  property: "closeDate"
}), /*#__PURE__*/React.createElement(DataTableColumn, {
  key: "stage",
  label: "Stage",
  property: "stage"
}), /*#__PURE__*/React.createElement(DataTableColumn, {
  key: "confidence",
  label: "Confidence",
  property: "confidence"
}), /*#__PURE__*/React.createElement(DataTableColumn, {
  key: "amount",
  label: "Amount",
  property: "amount"
}), /*#__PURE__*/React.createElement(DataTableColumn, {
  key: "contact",
  label: "Contact",
  property: "contact"
}, /*#__PURE__*/React.createElement(CustomDataTableCell, null))];

var Example = /*#__PURE__*/function (_React$Component) {
  _inherits(Example, _React$Component);

  var _super = _createSuper(Example);

  function Example() {
    var _this;

    _classCallCheck(this, Example);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      sortColumn: 'opportunityName',
      sortColumnDirection: {
        opportunityName: 'asc'
      },
      items: [{
        id: '896a6a60',
        opportunityName: 'Acme - 1,200 Widgets',
        accountName: 'Acme',
        closeDate: '4/10/15',
        stage: 'Value Proposition',
        confidence: '70%',
        amount: '$25,000,000',
        contact: 'jrogers@acme.com'
      }, {
        id: '44da9dcd',
        opportunityName: 'Acme - 200 Widgets',
        accountName: 'Acme',
        closeDate: '1/31/15',
        stage: 'Prospecting',
        confidence: '30%',
        amount: '$5,000,000',
        contact: 'bob@acme.com'
      }, {
        id: 'f988a721',
        opportunityName: 'salesforce.com - 1,000 Widgets',
        accountName: 'salesforce.com',
        closeDate: '1/31/15 3:45PM',
        stage: 'Id. Decision Makers',
        confidence: '60%',
        amount: '$25,000',
        contact: 'nathan@salesforce.com'
      }, {
        id: 'd7679cdd',
        opportunityName: 'Acme - 800 Widgets',
        accountName: 'Acme',
        closeDate: '6/11/18',
        stage: 'Value Proposition',
        confidence: '85%',
        amount: '$970,000',
        contact: 'jrogers@acme.com'
      }, {
        id: '0085f7a0',
        opportunityName: 'Acme - 744 Widgets',
        accountName: 'Acme',
        closeDate: '4/15/17',
        stage: 'Prospecting',
        confidence: '56%',
        amount: '$3,110,000',
        contact: 'bob@acme.com'
      }, {
        id: 'b7acc778',
        opportunityName: 'salesforce.com - 847 Widgets',
        accountName: 'salesforce.com',
        closeDate: '5/23/18 1:02PM',
        stage: 'Id. Decision Makers',
        confidence: '62%',
        amount: '$18,000',
        contact: 'nathan@salesforce.com'
      }, {
        id: '17991de5',
        opportunityName: 'Acme - 1,621 Widgets',
        accountName: 'Acme',
        closeDate: '5/16/17',
        stage: 'Value Proposition',
        confidence: '70%',
        amount: '$23,600,000',
        contact: 'jrogers@acme.com'
      }, {
        id: '09b2cee9',
        opportunityName: 'Acme - 430 Widgets',
        accountName: 'Acme',
        closeDate: '6/12/18',
        stage: 'Prospecting',
        confidence: '42%',
        amount: '$4,222,222',
        contact: 'bob@acme.com'
      }, {
        id: 'd0035700',
        opportunityName: 'salesforce.com - 677 Widgets',
        accountName: 'salesforce.com',
        closeDate: '7/21/17 10:11AM',
        stage: 'Id. Decision Makers',
        confidence: '42%',
        amount: '$24,200',
        contact: 'nathan@salesforce.com'
      }, {
        id: '4a526f0c',
        opportunityName: 'Acme - 1,444 Widgets',
        accountName: 'Acme',
        closeDate: '3/18/18',
        stage: 'Value Proposition',
        confidence: '66%',
        amount: '$22,000,000',
        contact: 'jrogers@acme.com'
      }, {
        id: '9a5dbdb2',
        opportunityName: 'Acme - 320 Widgets',
        accountName: 'Acme',
        closeDate: '1/31/18',
        stage: 'Prospecting',
        confidence: '36%',
        amount: '$4,322,000',
        contact: 'bob@acme.com'
      }, {
        id: '356dbb52',
        opportunityName: 'salesforce.com - 4,000 Widgets',
        accountName: 'salesforce.com',
        closeDate: '2/21/17 8:33PM',
        stage: 'Id. Decision Makers',
        confidence: '72%',
        amount: '$15,000',
        contact: 'nathan@salesforce.com'
      }]
    });

    return _this;
  }

  _createClass(Example, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("h3", {
        className: "slds-text-heading_medium slds-m-vertical_medium"
      }, "With keyboard navigation"), /*#__PURE__*/React.createElement(IconSettings, {
        iconPath: "/assets/icons"
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          height: '200px'
        }
      }, /*#__PURE__*/React.createElement(DataTable, {
        items: this.state.items,
        id: "DataTableExample-4-resizable-cols",
        resizable: true,
        keyboardNavigation: true,
        fixedLayout: true,
        resizableOptions: {
          onResize: function onResize(columnsResized) {
            console.log(JSON.stringify(columnsResized));
          }
        }
      }, columns)))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("h3", {
        className: "slds-text-heading_medium slds-m-vertical_medium"
      }, "Resizeable: Columns 0 and 3 fixed"), /*#__PURE__*/React.createElement(IconSettings, {
        iconPath: "/assets/icons"
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          height: '200px'
        }
      }, /*#__PURE__*/React.createElement(DataTable, {
        items: this.state.items,
        id: "DataTableExample-2-resizable-cols",
        fixedLayout: true,
        resizable: true,
        keyboardNavigation: true,
        resizableOptions: {
          onResize: function onResize(columnsResized) {
            console.log(JSON.stringify(columnsResized));
          },
          disabledColumns: [0, 3]
        }
      }, columns)))));
    }
  }]);

  return Example;
}(React.Component);

_defineProperty(Example, "displayName", 'DataTableExample');

export default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime
//# sourceMappingURL=resizable-columns.js.map